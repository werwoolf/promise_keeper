<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9c70ca9c-63e0-48ca-8746-95b2878f12bc" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="RsBuildProfile:test" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
        <option value="TypeScript JSX File" />
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="z2il9xmp" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2tSEE46k4vXk8JXfpceKJ9wKvQG" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Cargo.Test tasks::should_create_task_with_valid_data.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_find_task_counter_account.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_finish_task.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_get_all_tasks.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_not_create_task_with_invalid_data.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_not_finish_someones_else_task.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_not_finish_task_with_invalid_image_proof_hash.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_not_finish_task_with_non_in_progress_status.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_not_take_already_taken_task.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_not_vote_own_task.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_not_vote_task_twice.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_not_vote_task_with_non_voting_status.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_take_task.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_update_task_counter_account.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test tasks::should_vote_task_and_change_status_to_success.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test user_profile.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test user_profile::should_create_user_account.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test user_profile::should_update_user_account.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.Unnamed.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Is initialized!.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Is runs the constructor.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should create task with valid data.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should create task.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should find counter account .executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should find counter account.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should finish task.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should get all tasks.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should not create task with invalid data.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should not finish someones else task.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should not finish task with wrong image proof hash.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should not take already taken task.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should not task with non \&quot;In progress status\&quot;.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should not vote one task twice.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should not vote own task.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should not vote task with non \&quot;Voting\&quot; status.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should take task.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should update task counter.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should vote task and change status to fail.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should vote task and change status.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.Should vote task.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.should all.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.should create task account.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.should find counter account .executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.should finish task.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.should not create task with invalid data.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper.should take task.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper_task.Should find counter account.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper_task.Should update task counter.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper_task.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper_user_account.Should change user account.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper_user_account.Should create user account.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper_user_account.Should get all accounts.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper_user_account.Should get user account.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper_user_account.Should get user account0.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper_user_account.Should not create user account with invalid data.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.promise_keeper_user_account.executor&quot;: &quot;Run&quot;,
    &quot;Mocha.tests/promise_keeper.ts.executor&quot;: &quot;Run&quot;,
    &quot;Node.js Test Runner.promise_keeper.executor&quot;: &quot;Run&quot;,
    &quot;Node.js Test Runner.promise_keeper_user_account.executor&quot;: &quot;Run&quot;,
    &quot;Node.js.init_tasks_counter.ts.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.rust.reset.selective.auto.import&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/sergij/Desktop/my-projects/promise_keeper/idls&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.standard&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.stylelint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.standard&quot;: &quot;&quot;,
    &quot;node.js.selected.package.stylelint&quot;: &quot;&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.mocha.mocha_node_package_dir&quot;: &quot;/Users/sergij/Desktop/my-projects/promise_keeper/node_modules/mocha&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;npm.build.executor&quot;: &quot;Run&quot;,
    &quot;npm.test.executor&quot;: &quot;Run&quot;,
    &quot;org.rust.cargo.project.model.PROJECT_DISCOVERY&quot;: &quot;true&quot;,
    &quot;org.rust.cargo.project.model.impl.CargoExternalSystemProjectAware.subscribe.first.balloon&quot;: &quot;&quot;,
    &quot;org.rust.first.attach.projects&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;terminal&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/sergij/Desktop/my-projects/promise_keeper/app/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/idls" />
      <recent name="$PROJECT_DIR$/tests/src" />
      <recent name="$PROJECT_DIR$/app" />
      <recent name="$PROJECT_DIR$/target/idl" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/tests" />
      <recent name="$PROJECT_DIR$/tests/src" />
      <recent name="$PROJECT_DIR$/tests/idls" />
      <recent name="$PROJECT_DIR$/app/src/queries" />
    </key>
  </component>
  <component name="RsExternalLinterProjectSettings">
    <option name="runOnTheFly" value="true" />
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="mocha-javascript-test-runner" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Cargo.Test user_profile">
    <configuration name="Test tasks::should_find_task_counter_account" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package tests --lib tasks::should_find_task_counter_account -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test tasks::should_not_vote_task_with_non_voting_status" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package tests --lib tasks::should_not_vote_task_with_non_voting_status -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test user_profile" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package tests --lib user_profile" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test user_profile::should_create_user_account" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package tests --lib user_profile::should_create_user_account -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test user_profile::should_update_user_account" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package tests --lib user_profile::should_update_user_account -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="mocha-javascript-test-runner">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <working-directory>$PROJECT_DIR$</working-directory>
      <pass-parent-env>true</pass-parent-env>
      <envs>
        <env name="ANCHOR_WALLET" value="$USER_HOME$/.config/solana/id.json" />
      </envs>
      <ui />
      <extra-mocha-options />
      <test-kind>DIRECTORY</test-kind>
      <test-directory />
      <recursive>false</recursive>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Cargo.Test tasks::should_find_task_counter_account" />
      <item itemvalue="Cargo.Test tasks::should_not_vote_task_with_non_voting_status" />
      <item itemvalue="Cargo.Test user_profile" />
      <item itemvalue="Cargo.Test user_profile::should_create_user_account" />
      <item itemvalue="Cargo.Test user_profile::should_update_user_account" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Test user_profile" />
        <item itemvalue="Cargo.Test user_profile::should_update_user_account" />
        <item itemvalue="Cargo.Test user_profile::should_create_user_account" />
        <item itemvalue="Cargo.Test tasks::should_find_task_counter_account" />
        <item itemvalue="Cargo.Test tasks::should_not_vote_task_with_non_voting_status" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="rustcTarget" value="aarch64-unknown-linux-gnu" />
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.rustup/toolchains/stable-aarch64-apple-darwin/bin" />
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-WS-242.20224.426" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9c70ca9c-63e0-48ca-8746-95b2878f12bc" name="Changes" comment="" />
      <created>1740336960995</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1740336960995</updated>
      <workItem from="1740336962036" duration="2004000" />
      <workItem from="1740504076580" duration="5043000" />
      <workItem from="1740511494179" duration="17000" />
      <workItem from="1740844449570" duration="4463000" />
      <workItem from="1740858042685" duration="16296000" />
      <workItem from="1740940883441" duration="3606000" />
      <workItem from="1741027701551" duration="1042000" />
      <workItem from="1741029341259" duration="2297000" />
      <workItem from="1741112592528" duration="6281000" />
      <workItem from="1741798347804" duration="824000" />
      <workItem from="1741799182023" duration="950000" />
      <workItem from="1741800368784" duration="173000" />
      <workItem from="1741800545162" duration="5352000" />
      <workItem from="1741974172790" duration="15683000" />
      <workItem from="1742411322625" duration="821000" />
      <workItem from="1742487798690" duration="17000" />
      <workItem from="1742498459350" duration="1652000" />
      <workItem from="1742532334085" duration="2559000" />
      <workItem from="1742569014243" duration="11320000" />
      <workItem from="1742639630394" duration="16333000" />
      <workItem from="1742662462009" duration="18911000" />
      <workItem from="1742709478222" duration="4810000" />
      <workItem from="1742715921649" duration="57000" />
      <workItem from="1743075028951" duration="14779000" />
      <workItem from="1743177019445" duration="15190000" />
      <workItem from="1743228120324" duration="8370000" />
      <workItem from="1743242552985" duration="299000" />
      <workItem from="1743242854608" duration="1624000" />
      <workItem from="1743244490167" duration="20631000" />
      <workItem from="1743313594695" duration="1302000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>